<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:behavior ="clr-namespace:Wpf.Common.Controls.Behavior"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FocusVisual.xaml"/>
        <ResourceDictionary Source="../ErrorTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>

        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            BorderBrush="Transparent"                          
                            Background="Transparent" 
                     
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" 
                                BorderBrush="Transparent" 
                                BorderThickness="1" 
                                HorizontalAlignment="Right" 
                                Margin="0" 
                                Padding="2" 
                                SnapsToDevicePixels="true" 
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"   
                                  Data="M512 597.333333l-170.666667-170.666666h341.333334z"     
                                  Fill="{DynamicResource ControlBorderBrush}" 
                                  HorizontalAlignment="Center" 
                                  Margin="0" 
                                      Height="6"
                                      Width="6"
                                  Stretch="Uniform"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Validation.HasError),RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>

                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource HighLightBrush}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsDropDownOpen,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ForegroundBrush}"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="gray"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBoxItemStyle-->
    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource HighLightBrush}"/>

                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighLightBrush}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--不可编辑（默认）模板-->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">

        <Grid x:Name="templateRoot" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   PopupAnimation="Slide" 
                   Placement="Bottom">

                <Border x:Name="dropDownBorder" 
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                        BorderThickness="1" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        Background="{DynamicResource TextboxBackground}">


                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" 
                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>


                </Border>

            </Popup>
            <AdornerDecorator Grid.ColumnSpan="2">
                <Border x:Name="PART_Border"                                
                                 SnapsToDevicePixels="true"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"/>
            </AdornerDecorator>
            <!--默认显示的信息-->
            <TextBlock  Visibility="Collapsed" Foreground="LightGray" VerticalAlignment="Center" x:Name="PART_EMPTY_TextBlock" Margin="{TemplateBinding Padding}"/>
            <!--下拉按钮-->
            <ToggleButton x:Name="toggleButton" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}" 
                          Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>


            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false" 
                              Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="PART_EMPTY_TextBlock" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="Validation.HasError" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="PART_Border" Value="Red"/>

            </MultiTrigger>

            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
          
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--可编辑的模板-->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>

        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
                                      Background="Transparent" 
                                      Focusable="false" 
                                  Margin="{TemplateBinding Padding}"
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                       AllowsTransparency="true" 
                       Grid.ColumnSpan="2" 
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       PopupAnimation="Slide"                 
                       Placement="Bottom">

                <Border x:Name="dropDownBorder" 
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                        BorderThickness="1"          
                        Margin="{TemplateBinding Padding}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        Background="{TemplateBinding Background}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" 
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"                                                    
                                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>

            </Popup>

            <AdornerDecorator Grid.ColumnSpan="2">
                <Border x:Name="PART_Border"                                
                                SnapsToDevicePixels="true"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"/>
            </AdornerDecorator>

            <ToggleButton x:Name="toggleButton" 
                              Grid.ColumnSpan="2" 
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                              Style="{StaticResource ComboBoxToggleButton}"/>

            <Grid  SnapsToDevicePixels="True">
                <!--Watermark-->
                <TextBlock x:Name="PART_Watermark"                                           
                                           Foreground="{StaticResource WatermarkForeground}"                                           
                                           Padding="{TemplateBinding Padding}"
                                           Visibility="Collapsed"
                                           VerticalAlignment="Center" />
                <TextBox x:Name="PART_EditableTextBox" 
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                             Margin="{TemplateBinding Padding}" 
                             Style="{StaticResource ComboBoxEditableTextBox}"                         
                             CaretBrush="{TemplateBinding Foreground}"
                             Padding="{TemplateBinding Padding}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>

        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" SourceName="PART_EditableTextBox"  Value="True"/>
                    <Condition Property="Validation.HasError" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"  Value="Red"/>


            </MultiTrigger>

            <Trigger Property="behavior:ComboBoxBehavior.InputFilter" Value="OnlyInteger">
                <Setter Property="behavior:TextBoxBehavior.InputFilter"  Value="OnlyInteger"  TargetName="PART_EditableTextBox"/>
                <Setter Property="input:InputMethod.IsInputMethodEnabled"  Value="false"  TargetName="PART_EditableTextBox"/>
            </Trigger>

            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
           
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource TextboxBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="False" />
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsEditable" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"  Value="{DynamicResource  HighLightBrush}"/>
            </MultiTrigger>

            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush"  Value="Red"  />
            </Trigger>



            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="3,2"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>

        <Style.Triggers>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>