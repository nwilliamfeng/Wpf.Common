<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DataGridColumnHeader.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--the controltemplate of selectall button in the top-left of datagrid -->
    <ControlTemplate x:Key="DefaultDataGridSelectAllButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border"
           Background="{DynamicResource AccentBrush}"
            BorderBrush="{DynamicResource ControlBorderBrush}"
            VerticalAlignment="Stretch">
            <TextBlock Text="行号" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource ForegroundBrush}"/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding GridLinesVisibility,RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="All">
                <Setter Property="BorderThickness" TargetName="Border" Value="0,0,1,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding GridLinesVisibility,RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="Vertical">
                <Setter Property="BorderThickness" TargetName="Border" Value="0,0,1,0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--Default DataGridCell Style-->
    <Style TargetType="DataGridCell" x:Key="DataGridCellStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Width="{TemplateBinding Width}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"                                                                             
                        SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighLightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                        </Trigger>

                        <!--<MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="behavior:DataGridCellBehavior.ShowBorderWhenMouseOver" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" Value="1"/>

                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Default DataGridRow Style-->
    <Style TargetType="DataGridRow" x:Key="DefaultDataGridRowStyle">

        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="Black" />
     
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGridSelectRowBackground}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#003575"/>
                <Setter Property="BorderBrush" Value="Orange"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>



    <Style TargetType="DataGridRowHeader" x:Key="DefaultDataGridRowHeaderStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Border Background="{TemplateBinding Background}" 
                                        BorderThickness="0,0,0,0" 
                                        
                                        x:Name="rowHeaderBorder"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"  
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding GridLinesVisibility,RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="All">
                            <Setter Property="BorderThickness" TargetName="rowHeaderBorder" Value="0,0,1,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding GridLinesVisibility,RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="Vertical">
                            <Setter Property="BorderThickness" TargetName="rowHeaderBorder" Value="0,0,1,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
                        <Trigger Property="IsRowSelected" Value="true">
                            <Setter Property="Background" Value="{StaticResource DataGridSelectRowBackground}"/>
                            <Setter Property="BorderBrush" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>-->
    </Style>


    <!--Default DataGrid Style-->
    <Style TargetType="DataGrid" x:Key="DataGridStyle">
      
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="RowHeaderStyle" Value="{DynamicResource DefaultDataGridRowHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{DynamicResource DefaultDataGridRowStyle}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridCellBorderBrush}"/>
       
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="HasItems" Value="true">
                <Setter Property="EnableColumnVirtualization" Value="True"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            </Trigger>
  
        </Style.Triggers>
    </Style>

    <!--Editable DataGridCell Style-->
    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}" x:Key="EditDataGridCellStyle">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>