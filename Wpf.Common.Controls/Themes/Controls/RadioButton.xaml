<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Brushes.xaml"/>

    </ResourceDictionary.MergedDictionaries>

   
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
         
        <Setter Property="BorderBrush" Value="{StaticResource control-border-brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"  
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="100" 
                                    Padding="1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="1,1,2,1" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" MinWidth="10" MinHeight="10" Opacity="0"/>
                            </Grid>

                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">

                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource control-border-active-brush}"/>
                            
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource control-border-disable-brush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource control-border-disable-brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">

                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource control-border-active-brush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>