<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   >

    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"   
                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"  
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="40" 
                                    Padding="1"
                                  
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    SnapsToDevicePixels="True"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 >

                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark"  MinWidth="6" MinHeight="6"  />
                            </Grid>

                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">

                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource ControlBorderActiveBrush}"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">

                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource ControlBorderActiveBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemRadioButtonStyle" TargetType="{x:Type RadioButton}">

        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource DefaultButtonBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <Border x:Name="radioButtonBorder" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="1,1,2,1" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}"
                                              Focusable="False" 
                            TextElement.Foreground="{TemplateBinding Foreground}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>


                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsPressed" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.9"/>
                        </MultiTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"   Value="{StaticResource RadioButton.MouseOver.Background}"/>


                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>


                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>


                        </Trigger>-->
                        <!--<Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource HighLightBrush}"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">

                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>